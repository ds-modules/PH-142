BlackWhite_results <- read.csv("./Data/BlackWhite_results.csv")
BlackWhite_results <- read.csv("./Data/BlackWhite_results.csv")
setwd("C:/Users/timla/Desktop/Modules/PH-142/Data")
BlackWhite_results <- read.csv("./Data/BlackWhite_results.csv")
setwd("C:/Users/timla/Desktop/Modules/PH-142/Workshop_Part2")
BlackWhite_results <- read.csv("./Data/BlackWhite_results.csv")
setwd("C:/Users/timla/Desktop/Modules/PH-142/Data")
BlackWhite_results <- read.csv("./Data/BlackWhite_results.csv")
BlackWhite_results <- read.csv("../Data/BlackWhite_results.csv")
setwd("C:/Users/timla/Desktop/Modules/PH-142/Workshop_Part2")
View(BlackWhite_results)
BlackWhite_results <- read.csv("../Data/BlackWhite_results.csv")
colnames(BlackWhite_results)
BlackWhite_results <- read.csv("../Data/BlackWhite_results.csv")
View(BlackWhite_results)
str(BlackWhite_results)
head(BlackWhite_results$X.2) #first six
tail(BlackWhite_results$X.2) #last six
knitr::opts_chunk$set(echo = TRUE)
str(BlackWhite_results)
head(BlackWhite_results$X.2) #first six
tail(BlackWhite_results$X.2) #last six
View(BlackWhite_results)
identical(BlackWhite_results$X.1, BlackWhite_results$X.2) #are these variables the same?
identical(BlackWhite_results$X.1, BlackWhite_results$X.2)
library(dplyr) #load this package
library(dplyr) #load this package
rm(cleaned.data)
cleaned.data <- BlackWhite_results %>% select(-X, -X.1, -X.2)
table(cleaned.data$sex)
table(cleaned.data$sex)
table(cleaned.data$state)
table(cleaned.data$year)
table(cleaned.data$state, cleaned.data$Census_Region)
levels(cleaned.data$state)  #this prints a vector of the factor levels in their order
length(levels(cleaned.data$state))  #this prints the length
unique(cleaned.data$LE_black_lcl)
str(cleaned.data$state)
unique(cleaned.data$sex)
unique(cleaned.data$Census_Division)
length(unique(cleaned.data$Census_Division))
unique(cleaned.data$sex)
unique(cleaned.data$Census_Division)
View(cleaned.data)
levels(cleaned.data$state)  #this prints a vector of the factor levels in their order
length(levels(cleaned.data$state))  #this prints the length
Alabama.data <- cleaned.data %>% filter(state == "Alabama", sex == "Male")
Alabama.data %>% summarise(overall.mean.white = mean(LE_white_mean), overall.mean.black = mean(LE_black_mean))
library(ggplot2) #remember to first install the package if you haven't done so already
ggplot(data = Alabama.data, aes(x = year, y = LE_white_mean))
ggplot(data = Alabama.data, aes(x = year, y = LE_white_mean)) +
geom_point()
ggplot(data = Alabama.data, aes(x = year, y = LE_white_mean))
ggplot(data = Alabama.data, aes(x = year, y = LE_white_mean))
+ geom_point()
ggplot(data = Alabama.data, aes(x = year, y = LE_white_mean)) +
geom_point(col = "red", size = 2, pch = 3)
ggplot(data = Alabama.both.genders, aes(x = year, y = LE_white_mean)) +
geom_line(col = "#7F526D", size = 2) + ##oh boy, what is happening here? any guesses?
xlab("Year") + ylab("Mean life expectancy (years)")
ggplot(data = Alabama.both.genders, aes(x = year, y = LE_white_mean)) +
geom_point(col = "#7F526D", size = 2) + #better, but still not ideal. What would make this better?
xlab("Year") + ylab("Mean life expectancy (years)")
library(plotly) # don't forget to install first if you haven't done so already
our.plot <- ggplot(data = data.females, aes(x = year, y = LE_white_mean)) +
geom_line(aes(col = state)) +
xlab("Year") + ylab("Mean life expectancy (years)")
CS.data <- read.csv("../Data/Cesarean.csv")
example.data <- example.data %>% rename(new.name = old.name)
